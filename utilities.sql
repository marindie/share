--============================
--?Oracle DUP CHECK
--============================
/*
??-- #? ROW_NUMBER() 
*/
SELECT BOARD_SEQ, FILE_NAME, COUNT(BOARD_SEQ), ORDER_NO
FROM(SELECT BOARD_SEQ, FILE_NAME
, ROW_NUMBER() OVER (PARTITION BY BOARD_SEQ ORDER BY FILE_SEQ) ORDER_NO
FROM BOARD_FILE BF
)
WHERE ORDER_NO = 1
GROUP BY BOARD_SEQ, FILE_NAME, ORDER_NO
;

/*
??-- #? ROWID 
*/
SELECT BOARD_SEQ, FILE_NAME, COUNT(BOARD_SEQ)
FROM BOARD_FILE BF
WHERE ROWID IN(SELECT MAX(ROWID) FROM BOARD_FILE WHERE BOARD_SEQ = BF.BOARD_SEQ)
GROUP BY BOARD_SEQ
;
--============================
--?SPLIT (Vertical version)
--============================
--?1) REGEX, CONNECT BY, SPLIT

WITH TT AS
(SELECT 'AAA,BBB,CCC,DDD.EEE' TXT FROM DUAL)

SELECT TRIM(REGEXP_SUBSTR(TXT, '[^,]+', 1, LEVEL)) AS TXT 
FROM TT
CONNECT BY INSTR(TXT, ',', 1, LEVEL - 1) > 0;

--============================
-- USER PRIVILEGE
--============================
SELECT * FROM ALL_USERS;
SELECT * FROM DBA_SYS_PRIV WHERE GRANTEE = 'UPADM';
SELECT * FROM DBA_ROLE_PRIV WHERE GRANTEE = 'UPADM';

SELECT NAME FROM SYS.SYSTEM_PRIVILEGE_MAP ; 
SELECT NAME FROM SYS.TABLE_PRIVILEGE_MAP ;

--============================
-- TABLE SEARCH
--============================
SELECT * FROM USER_TABLES
WHERE TABLE_NAME LIKE '%LIST%';

SELECT * FROM USER_TABLES
WHERE TABLE_NAME LIKE 'TB_%';

SELECT * FROM TB_USER_LIST ORDER BY EXPIRE_DT DESC;
SELECT * FROM USER_TABLES WHERE ROWNUM < '10';

--============================
--¸ÞÅ¸Á¤º¸ ÃßÃâ
--============================
--TABLESPACE
SELECT TABLESPACE_NAME, DBMS_METADATA.GET_DDL('TABLESPACE',TABLESPACE_NAME) || ';' SCRIPT
FROM DBA_TABLESPACES;
--WHERE TABLESPACE_NAME IN ('');

--============================
--»ç¿ëÀÚ Á¶È¸
--============================
SELECT * FROM DBA_USERS;

--============================
-- TABLESPACE Á¤º¸ Á¶È¸
--============================
SELECT   SUBSTR(A.TABLESPACE_NAME,1,30) TABLESPACE,
         ROUND(SUM(A.TOTAL1)/1024/1024,1) "TOTALMB",
         ROUND(SUM(A.TOTAL1)/1024/1024,1)-ROUND(SUM(A.SUM1)/1024/1024,1) "USEDMB",
         ROUND(SUM(A.SUM1)/1024/1024,1) "FREEMB",
         ROUND((ROUND(SUM(A.TOTAL1)/1024/1024,1)-ROUND(SUM(A.SUM1)/1024/1024,1))/ROUND(SUM(A.TOTAL1)/1024/1024,1)*100,2) "USED%"
FROM
         (SELECT   TABLESPACE_NAME,0 TOTAL1,SUM(BYTES) SUM1,MAX(BYTES) MAXB,COUNT(BYTES) CNT
          FROM     DBA_FREE_SPACE
          GROUP BY TABLESPACE_NAME
          UNION
          SELECT   TABLESPACE_NAME,SUM(BYTES) TOTAL1,0,0,0
          FROM     DBA_DATA_FILES
          GROUP BY TABLESPACE_NAME) A
GROUP BY A.TABLESPACE_NAME
ORDER BY TABLESPACE;

SELECT TABLESPACE_NAME, FILE_NAME, BYTES/1024 AS MBytes, RESULT/1024 AS USE_MBytes FROM
  (
  SELECT E.TABLESPACE_NAME,E.FILE_NAME,E.BYTES, (E.BYTES-SUM(F.BYTES)) RESULT
  FROM DBA_DATA_FILES E, DBA_FREE_SPACE F
  WHERE E.FILE_ID = F.FILE_ID
  GROUP BY E.TABLESPACE_NAME, E.FILE_NAME, E.BYTES
  ) A;

SELECT  A.FILE_NAME, A.TABLESPACE_NAME, A.BYTES, A.STATUS,
        B.SEGMENT_SPACE_MANAGEMENT, B.DEF_TAB_COMPRESSION, B.BIGFILE, B.ENCRYPTED, B.COMPRESS_FOR        
FROM DBA_DATA_FILES A, DBA_TABLESPACES B
WHERE 1=1
AND A.TABLESPACE_NAME = B.TABLESPACE_NAME;

SELECT DISTINCT TABLESPACE_NAME FROM USER_TABLES;


--===============================
-- Kill Session
--===============================
SET SERVEROUTPUT ON
SET VERIFY OFF
-- CLEAR DEAD SESSION
DECLARE
USER_NAME VARCHAR2(32) := 'AXADJ';
BEGIN
  FOR C IN (SELECT USERNAME, SID, SERIAL#, STATUS FROM V$SESSION WHERE USERNAME = USER_NAME AND STATUS = 'INACTIVE') LOOP
    DBMS_OUTPUT.PUT_LINE('ALTER SYSTEM KILL SESSION '''||C.SID||','||C.SERIAL#||''';');
    EXECUTE IMMEDIATE 'ALTER SYSTEM KILL SESSION '''||C.SID||','||C.SERIAL#||'''';
  END LOOP;
END;
/
SELECT USERNAME, SID, SERIAL#, STATUS FROM V$SESSION WHERE SCHEMANAME = 'AXADJ' AND MACHINE = '';

SELECT 'ALTER SYSTEM KILL SESSION '''||SID||','||SERIAL#||''';' 
FROM V$SESSION 
WHERE SCHEMANAME = 'AXADJ' AND MACHINE = '' AND STATUS IN ('ACTIVE','INACTIVE');

DECLARE
USER_NAME VARCHAR2(32) := 'AXADJ';
V_MACHINE VARCHAR2(32) := ''; --
BEGIN
  FOR C IN (SELECT USERNAME, SID, SERIAL#, STATUS FROM V$SESSION WHERE SCHEMANAME = USER_NAME AND MACHINE = V_MACHINE) LOOP
    DBMS_OUTPUT.PUT_LINE('ALTER SYSTEM KILL SESSION '''||C.SID||','||C.SERIAL#||''';');
    --EXECUTE IMMEDIATE 'ALTER SYSTEM KILL SESSION '''||C.SID||','||C.SERIAL#||'''';
  END LOOP;
END;
/


--===============================
-- Get Full SQL
--===============================
SELECT SQL_FULLTEXT FROM V$SQL 
WHERE SQL_ID IN (SELECT SQL_ID FROM V$OPEN_CURSOR WHERE ADDRESS IN (SELECT SQL_ADDRESS FROM V$SESSION WHERE USER_NAME = 'AXADJ'));


--============================
-- Check trace file location
--============================
--Use below query to find the location of trace files
select value from v$parameter
where name = 'user_dump_dest';


--===============================
-- Session base 10046 trace log
--===============================
ALTER SESSION SET SQL_TRACE = TRUE;  
ALTER SESSION SET EVENTS '10046 trace name context forever, level 12'; 
ALTER SESSION SET TRACEFILE_IDENTIFIER='wony'; 
--run query
SELECT 'TEST_WONY' FROM DUAL;
-- Set back to default
ALTER SESSION SET SQL_TRACE = FALSE;  





--===============================
-- COALESCE SAMPLE
--===============================
SELECT
--N5120
(SELECT DECODE(DATATYPE_CLS,'T',NVL2(ITEM_TEXT,'ß¿Ü»Ù£ªÞª¿ªÏñø?Ù£:'||ITEM_TEXT,''),'N',NVL2(ITEM_NUM,'ß¿Ü»Ù£ªÞª¿ªÏñø?Ù£:'||ITEM_NUM,'') )
FROM CTCO0200TB B WHERE B.PLCY_NO = A.SALE_PLCY_NO AND B.OBJT_ITEM_CD = 'N1520') AS N1520,
--N5121 ~ N5124
COALESCE((SELECT DECODE(DATATYPE_CLS,'T',DECODE(ITEM_TEXT,'1','ö½Öû?é»:?ÞÛ','0',''),'N',DECODE(ITEM_NUM,'1','ö½Öû?é»:?ÞÛ','0','') )
          FROM CTCO0200TB B 
          WHERE B.PLCY_NO = A.SALE_PLCY_NO AND B.OBJT_ITEM_CD = 'N1521'),
         (SELECT DECODE(DATATYPE_CLS,'T',DECODE(ITEM_TEXT,'1','ö½Öû?é»:÷×êÂ','0',''),'N',DECODE(ITEM_NUM,'1','ö½Öû?é»:÷×êÂ','0','') )
          FROM CTCO0200TB B 
          WHERE B.PLCY_NO = A.SALE_PLCY_NO AND B.OBJT_ITEM_CD = 'N1522'),
         (SELECT DECODE(DATATYPE_CLS,'T',DECODE(ITEM_TEXT,'1','ö½Öû?é»:ìýêÂ','0',''),'N',DECODE(ITEM_NUM,'1','ö½Öû?é»:ìýêÂ','0','') )
          FROM CTCO0200TB B 
          WHERE B.PLCY_NO = A.SALE_PLCY_NO AND B.OBJT_ITEM_CD = 'N1523'),
         (SELECT DECODE(DATATYPE_CLS,'T',DECODE(ITEM_TEXT,'1','ö½Öû?é»:â¢âú','0',''),'N',DECODE(ITEM_NUM,'1','ö½Öû?é»:â¢âú','0','') )
          FROM CTCO0200TB B 
          WHERE B.PLCY_NO = A.SALE_PLCY_NO AND B.OBJT_ITEM_CD = 'N1524')
          ,''
          ) AS N1521_N1524,
--N5125
(SELECT DECODE(DATATYPE_CLS,'T',NVL2(ITEM_TEXT,'ö½Öû?é»ªäö½ÖûÝ»êÈ¡¢?ªÎÙ£îñªÊªÉßÙá¬£º'||ITEM_TEXT,''),'N',NVL2(ITEM_NUM,'ö½Öû?é»ªäö½ÖûÝ»êÈ¡¢?ªÎÙ£îñªÊªÉßÙá¬£º'||ITEM_NUM,'') )
FROM CTCO0200TB B WHERE B.PLCY_NO = A.SALE_PLCY_NO AND B.OBJT_ITEM_CD = 'N1525') AS N1525,
--N5126
(SELECT DECODE(DATATYPE_CLS,'T',NVL2(ITEM_TEXT,'?ÞÛ?ö½Öûª·ª¿Ñ¢Êà£º'||ITEM_TEXT,''),'N',NVL2(ITEM_NUM,'?ÞÛ?ö½Öûª·ª¿Ñ¢Êà£º'||ITEM_NUM,'') )
FROM CTCO0200TB B WHERE B.PLCY_NO = A.SALE_PLCY_NO AND B.OBJT_ITEM_CD = 'N1526') AS N1526,
--N5127
(SELECT DECODE(DATATYPE_CLS,'T',DECODE(ITEM_TEXT,'1','ö½Öû?üÏ£ºö½Öûñé','2','ö½Öû?üÏ£ºèÇö½','3','ö½Öû?üÏ£º?Î¦?óÌñé'),'N',DECODE(ITEM_NUM,'1','ö½Öû?üÏ£ºö½Öûñé','2','ö½Öû?üÏ£ºèÇö½','3','ö½Öû?üÏ£º?Î¦?óÌñé') )
FROM CTCO0200TB B WHERE B.PLCY_NO = A.SALE_PLCY_NO AND B.OBJT_ITEM_CD = 'N1527') AS N1527,
--N5128
(SELECT DECODE(DATATYPE_CLS,'T',NVL2(ITEM_TEXT,'ÔÑÚªÜ»êÂÙ££º'||ITEM_TEXT,''),'N',NVL2(ITEM_NUM,'ÔÑÚªÜ»êÂÙ££º'||ITEM_NUM,'') )
FROM CTCO0200TB B WHERE B.PLCY_NO = A.SALE_PLCY_NO AND B.OBJT_ITEM_CD = 'N1528') AS N1528,
--N5129
(SELECT DECODE(DATATYPE_CLS,'T',NVL2(ITEM_TEXT,'ï³ü¥Ûã?£º'||ITEM_TEXT,''),'N',NVL2(ITEM_NUM,'ï³ü¥Ûã?£º'||ITEM_NUM,'') )
FROM CTCO0200TB B WHERE B.PLCY_NO = A.SALE_PLCY_NO AND B.OBJT_ITEM_CD = 'N1529') AS N1529
FROM CTCS0000TB A WHERE SALE_PLCY_NO = 'A17090000043';




--===============================
-- ETC
--===============================
SET SERVEROUTPUT ON;
SET VERIFY OFF;
DECLARE
  ID_FIRST VARCHAR2(32) := '20170421';
  ID_SECOND VARCHAR2(32) := '20170901';
  DSGN_NUM VARCHAR2(32) := '';
  SALE_NUM VARCHAR2(32) := 'A17040000499'; --B16100004066 E16100000554 E17010000463
  COMP1 VARCHAR2(32) := '';
  COMP2 VARCHAR2(32) := '';  
  
  DP_ITEM_LIST VARCHAR2(32) := '';
  CP_QUOT_ITEM VARCHAR2(32) := '';
  CP_QUOT_ITEM_VAL VARCHAR2(32) := '';

  TYPE ITEM_TYPE IS TABLE OF VARCHAR2(32);
  Q_ITEM_LIST ITEM_TYPE := ITEM_TYPE();
  S_ITEM_LIST ITEM_TYPE := ITEM_TYPE();
  
  TYPE ITEM_ST IS RECORD
  (
    INFO_CD VARCHAR2(32),
    INFO_NUM VARCHAR2(32),
    INFO_TEXT VARCHAR2(32),
    INFO_DATE VARCHAR2(32),
    DATATYPE VARCHAR2(32)
  );
  TYPE ITEM_LS IS TABLE OF ITEM_ST;
  ITEM_LIST_VAL1 ITEM_LS := ITEM_LS();  
  ITEM_LIST_VAL2 ITEM_LS := ITEM_LS();    
  

  TYPE RESULT_RECORD IS RECORD
  (
    CONTROL VARCHAR2(32),
    INFO_TYP_ITM VARCHAR2(32)
  );
  TYPE RESULT_LIST IS TABLE OF RESULT_RECORD;
  V_INDEX INTEGER := 1;
  ITEM_RES RESULT_LIST := RESULT_LIST();
  
  TYPE REC1 IS RECORD
  (
    PROD_CD VARCHAR2(32),
    INFO_TYP VARCHAR2(32),
    INFO_TYP_ITM VARCHAR2(32)
  );
  TYPE RESULT_SET IS TABLE OF REC1;

  RES_SET1 RESULT_SET := RESULT_SET();
  RES_SET2 RESULT_SET := RESULT_SET();
  RATE_BASE_DATE_FIRST VARCHAR2(32);
  RATE_BASE_DATE_SECOND VARCHAR2(32);
  DSGN_RATE_BASE_DATE VARCHAR2(32);
  SALE_RATE_BASE_DATE VARCHAR2(32);
  FOUND VARCHAR2(1) := 'N';
  
  --===================
  --GET_RATE_BASE_DATE
  --===================
  CURSOR GET_RATE_BASE_DATE (V_INCEPTION_DATE VARCHAR2)
  IS
  SELECT DECODE(B.APP_STA_DATE,NULL,A.APP_STA_DATE,B.APP_STA_DATE) APP_STA_DATE
  FROM 
  (SELECT PROD_CD ,APP_STA_DATE ,APP_END_DATE FROM PDMS0000TB	WHERE PROD_CD='60001')A 
  ,(SELECT PROD_CD ,APP_STA_DATE ,APP_END_DATE FROM	PDMS0200TB WHERE PROD_CD='60001' AND APP_STA_DATE <= V_INCEPTION_DATE AND APP_END_DATE >= V_INCEPTION_DATE)B
  WHERE	B.PROD_CD(+) = A.PROD_CD;
  
  --========================
  --GET_RATE_BASE_DATE_BY_DSGN
  --========================
  CURSOR GET_RATE_BASE_DATE_BY_DSGN (DSGN_NO VARCHAR2)
  IS
  SELECT DECODE(B.APP_STA_DATE,NULL,A.APP_STA_DATE,B.APP_STA_DATE) APP_STA_DATE
  FROM 
  (SELECT PROD_CD ,APP_STA_DATE ,APP_END_DATE FROM PDMS0000TB	WHERE PROD_CD='60001')A 
  ,(SELECT PROD_CD ,APP_STA_DATE ,APP_END_DATE FROM	PDMS0200TB WHERE PROD_CD='60001' AND APP_STA_DATE <= (SELECT SALE_AGRM_START_DT FROM CODS0000TB WHERE ENTY_DSGN_NO = DSGN_NO) AND APP_END_DATE >= (SELECT SALE_AGRM_START_DT FROM CODS0000TB WHERE ENTY_DSGN_NO = DSGN_NO) )B
  WHERE	B.PROD_CD(+) = A.PROD_CD;  

  --========================
  --GET_RATE_BASE_DATE_BY_SALE
  --========================
  CURSOR GET_RATE_BASE_DATE_BY_SALE (SALE_NO VARCHAR2)
  IS
  SELECT DECODE(B.APP_STA_DATE,NULL,A.APP_STA_DATE,B.APP_STA_DATE) APP_STA_DATE
  FROM 
  (SELECT PROD_CD ,APP_STA_DATE ,APP_END_DATE FROM PDMS0000TB	WHERE PROD_CD='60001')A 
  ,(SELECT PROD_CD ,APP_STA_DATE ,APP_END_DATE FROM	PDMS0200TB WHERE PROD_CD='60001' AND APP_STA_DATE <= (SELECT SALE_AGRM_START_DT FROM CTCS0000TB WHERE SALE_PLCY_NO = SALE_NO) AND APP_END_DATE >= (SELECT SALE_AGRM_START_DT FROM CTCS0000TB WHERE SALE_PLCY_NO = SALE_NO) )B
  WHERE	B.PROD_CD(+) = A.PROD_CD;  
  
  
  --======================================
  --GET QUOTATION ITEM LIST BY RATE_BASE_DATE
  --======================================
  CURSOR GET_QT_OBJECT_FIRST (V_RATE_BASE_DATE VARCHAR2)
  IS
  SELECT A.PROD_CD ,A.INFO_TYP ,A.INFO_TYP_ITM
    FROM
    (SELECT PROD_CD	,INFO_TYP	,INFO_TYP_ITM FROM PDIT0210TB WHERE PROD_CD='60001' AND APP_STA_DATE <= V_RATE_BASE_DATE AND APP_END_DATE >= V_RATE_BASE_DATE)A 
    ,(SELECT PROD_CD ,INFO_TYP ,INFO_TYP_ITM FROM PDIT0214TB WHERE PROD_CD='60001' AND APP_STA_DATE <= V_RATE_BASE_DATE AND APP_END_DATE >= V_RATE_BASE_DATE)B 
    WHERE B.PROD_CD(+) = A.PROD_CD 
    AND B.INFO_TYP(+) = A.INFO_TYP 
    AND B.INFO_TYP_ITM(+) = A.INFO_TYP_ITM 
  UNION
    SELECT A.PROD_CD ,A.INFO_TYP_FK INFO_TYP ,A.OBJ_TYP_ITM INFO_TYP_ITM 
    FROM
    (SELECT PROD_CD ,OBJ_TYP ,OBJ_TYP_ITM ,INFO_TYP_FK FROM PDOB0100TB WHERE PROD_CD='60001' AND APP_STA_DATE <= V_RATE_BASE_DATE AND APP_END_DATE >= V_RATE_BASE_DATE)A 
    ,(SELECT PROD_CD ,OBJ_TYP ,OBJ_TYP_ITM FROM PDOB0120TB WHERE PROD_CD='60001' AND APP_STA_DATE <= V_RATE_BASE_DATE AND APP_END_DATE >= V_RATE_BASE_DATE)B 
    WHERE 
    B.PROD_CD(+) = A.PROD_CD 
    AND B.OBJ_TYP(+) = A.OBJ_TYP 
    AND B.OBJ_TYP_ITM(+) = A.OBJ_TYP_ITM;
  
  --===================
  --GET QUOTATION ITEM LIST BY RATE_BASE_DATE
  --===================
  CURSOR GET_QT_OBJECT_SECOND (V_RATE_BASE_DATE VARCHAR2)
  IS
  SELECT A.PROD_CD ,A.INFO_TYP ,A.INFO_TYP_ITM
    FROM
    (SELECT PROD_CD	,INFO_TYP	,INFO_TYP_ITM FROM PDIT0210TB WHERE PROD_CD='60001' AND APP_STA_DATE <= V_RATE_BASE_DATE AND APP_END_DATE >= V_RATE_BASE_DATE)A 
    ,(SELECT PROD_CD ,INFO_TYP ,INFO_TYP_ITM FROM PDIT0214TB WHERE PROD_CD='60001' AND APP_STA_DATE <= V_RATE_BASE_DATE AND APP_END_DATE >= V_RATE_BASE_DATE)B 
    WHERE B.PROD_CD(+) = A.PROD_CD 
    AND B.INFO_TYP(+) = A.INFO_TYP 
    AND B.INFO_TYP_ITM(+) = A.INFO_TYP_ITM 
  UNION
    SELECT A.PROD_CD ,A.INFO_TYP_FK INFO_TYP ,A.OBJ_TYP_ITM INFO_TYP_ITM 
    FROM
    (SELECT PROD_CD ,OBJ_TYP ,OBJ_TYP_ITM ,INFO_TYP_FK FROM PDOB0100TB WHERE PROD_CD='60001' AND APP_STA_DATE <= V_RATE_BASE_DATE AND APP_END_DATE >= V_RATE_BASE_DATE)A 
    ,(SELECT PROD_CD ,OBJ_TYP ,OBJ_TYP_ITM FROM PDOB0120TB WHERE PROD_CD='60001' AND APP_STA_DATE <= V_RATE_BASE_DATE AND APP_END_DATE >= V_RATE_BASE_DATE)B 
    WHERE 
    B.PROD_CD(+) = A.PROD_CD 
    AND B.OBJ_TYP(+) = A.OBJ_TYP 
    AND B.OBJ_TYP_ITM(+) = A.OBJ_TYP_ITM;
  
  
  --========================
  --GET QUOTATION_ITEM
  --========================
  CURSOR QUOTATION_ITEM(DSGN_NO VARCHAR2)
  IS
  SELECT OBJT_ITEM_CD FROM CODO0200TB WHERE ENTY_DSGN_NO = DSGN_NO
  UNION
  SELECT INFO_CD OBJT_ITEM_CD FROM COIT0200TB WHERE ENTY_DSGN_NO = DSGN_NO;

  --========================
  --GET SALEAGREEMENT_ITEM
  --========================
  CURSOR SALES_ITEM(SALE_NO VARCHAR2)
  IS
  SELECT OBJT_ITEM_CD FROM CTCO0200TB WHERE PLCY_NO = SALE_NO
  UNION
  SELECT INFO_CD OBJT_ITEM_CD FROM CTIT0200TB WHERE PLCY_NO = SALE_NO;  

  --========================
  --GET QUOTATION_ITEM_VAL
  --========================
  CURSOR QUOTATION_ITEM_VAL(DSGN_NO VARCHAR2)
  IS
  SELECT OBJT_ITEM_CD, ITEM_NUM, ITEM_TEXT, ITEM_DATE, DATATYPE_CLS FROM CODO0200TB WHERE ENTY_DSGN_NO = DSGN_NO
  UNION
  SELECT INFO_CD, INFO_VAL_NUM, INFO_VAL_TEXT, INFO_VAL_DATE, DATATYPE_CLS FROM COIT0200TB WHERE ENTY_DSGN_NO = DSGN_NO;

  --========================
  --GET SALEAGREEMENT_ITEM_VAL
  --========================
  CURSOR SALES_ITEM_VAL(SALE_NO VARCHAR2)
  IS
  SELECT OBJT_ITEM_CD, ITEM_NUM, ITEM_TEXT, ITEM_DATE, DATATYPE_CLS FROM CTCO0200TB WHERE PLCY_NO = SALE_NO
  UNION
  SELECT INFO_CD, INFO_VAL_NUM, INFO_VAL_TEXT, INFO_VAL_DATE, DATATYPE_CLS FROM CTIT0200TB WHERE PLCY_NO = SALE_NO;



--START
BEGIN
  
  DP_ITEM_LIST := '&DISPLAY_ITEM?';
  CP_QUOT_ITEM := '&COMPARE_QUOTATION_ITEMS?';
  CP_QUOT_ITEM_VAL := '&COMPARE_QUOTATION_ITEMS_VALUES?';
  
  IF (DSGN_NUM IS NOT NULL) THEN
    OPEN GET_RATE_BASE_DATE_BY_DSGN(DSGN_NUM);
      FETCH GET_RATE_BASE_DATE_BY_DSGN INTO DSGN_RATE_BASE_DATE;
    CLOSE GET_RATE_BASE_DATE_BY_DSGN;
    OPEN QUOTATION_ITEM(DSGN_NUM);
      FETCH QUOTATION_ITEM BULK COLLECT INTO Q_ITEM_LIST;
    CLOSE QUOTATION_ITEM;
  END IF;
  IF (SALE_NUM IS NOT NULL) THEN
    OPEN GET_RATE_BASE_DATE_BY_SALE(SALE_NUM);
      FETCH GET_RATE_BASE_DATE_BY_SALE INTO SALE_RATE_BASE_DATE;
    CLOSE GET_RATE_BASE_DATE_BY_SALE;  
    OPEN SALES_ITEM(SALE_NUM);
      FETCH SALES_ITEM BULK COLLECT INTO S_ITEM_LIST;
    CLOSE SALES_ITEM;    
  END IF;

  IF REGEXP_LIKE(COMP1, '^B') OR REGEXP_LIKE(COMP1, '^E') OR REGEXP_LIKE(COMP1, '^C') THEN
    OPEN QUOTATION_ITEM_VAL(COMP1);
      FETCH QUOTATION_ITEM_VAL BULK COLLECT INTO ITEM_LIST_VAL1;
    CLOSE QUOTATION_ITEM_VAL;
  ELSIF REGEXP_LIKE(COMP1, '^A') THEN
    OPEN SALES_ITEM_VAL(COMP1);
      FETCH SALES_ITEM_VAL BULK COLLECT INTO ITEM_LIST_VAL1;
    CLOSE SALES_ITEM_VAL;        
  END IF;  

  IF REGEXP_LIKE(COMP2, '^B') OR REGEXP_LIKE(COMP2, '^E') OR REGEXP_LIKE(COMP2, '^C') THEN
    OPEN QUOTATION_ITEM_VAL(COMP2);
      FETCH QUOTATION_ITEM_VAL BULK COLLECT INTO ITEM_LIST_VAL2;
    CLOSE QUOTATION_ITEM_VAL;
  ELSIF REGEXP_LIKE(COMP2, '^A') THEN
    OPEN SALES_ITEM_VAL(COMP2);
      FETCH SALES_ITEM_VAL BULK COLLECT INTO ITEM_LIST_VAL2;
    CLOSE SALES_ITEM_VAL;        
  END IF;  
    


  IF (ID_FIRST IS NOT NULL AND ID_SECOND IS NOT NULL) THEN    
    --===================
    -- GET_RATE_BASE_DATE FIRST
    --===================
    OPEN GET_RATE_BASE_DATE(ID_FIRST);
      FETCH GET_RATE_BASE_DATE INTO RATE_BASE_DATE_FIRST;
      DBMS_OUTPUT.PUT_LINE('FIRST RATE_BASE_DATE '||RATE_BASE_DATE_FIRST);
    CLOSE GET_RATE_BASE_DATE;
    
    --===================
    -- GET_RATE_BASE_DATE SECOND
    --===================
    OPEN GET_RATE_BASE_DATE(ID_SECOND);
      FETCH GET_RATE_BASE_DATE INTO RATE_BASE_DATE_SECOND;
      DBMS_OUTPUT.PUT_LINE('SECOND RATE_BASE_DATE '||RATE_BASE_DATE_SECOND);
    CLOSE GET_RATE_BASE_DATE;
    
    --===================
    --COMPARE ITEM CODE LIST (DELETE)
    --===================
    OPEN GET_QT_OBJECT_FIRST(RATE_BASE_DATE_FIRST);
    FETCH GET_QT_OBJECT_FIRST BULK COLLECT INTO RES_SET1;
    OPEN GET_QT_OBJECT_SECOND(RATE_BASE_DATE_SECOND);
    FETCH GET_QT_OBJECT_SECOND BULK COLLECT INTO RES_SET2;
    IF(RES_SET1.COUNT > 0 AND RES_SET2.COUNT > 0) THEN
      FOR C IN RES_SET1.FIRST .. RES_SET1.LAST LOOP
        FOUND := 'N';
        FOR D IN RES_SET2.FIRST .. RES_SET2.LAST LOOP
          IF (RES_SET1(C).PROD_CD = RES_SET2(D).PROD_CD AND RES_SET1(C).INFO_TYP = RES_SET2(D).INFO_TYP AND RES_SET1(C).INFO_TYP_ITM = RES_SET2(D).INFO_TYP_ITM) THEN
            FOUND := 'Y';
          END IF;
        END LOOP;
        IF (FOUND = 'N') THEN
          ITEM_RES.EXTEND;
          ITEM_RES(V_INDEX).CONTROL := 'DELETE'; 
          ITEM_RES(V_INDEX).INFO_TYP_ITM := RES_SET1(C).INFO_TYP_ITM;
          --DBMS_OUTPUT.PUT_LINE(ITEM_RES(V_INDEX).CONTROL||' '||ITEM_RES(V_INDEX).INFO_TYP_ITM);
          V_INDEX := V_INDEX + 1;      
        END IF;
      END LOOP;    
    END IF;
    CLOSE GET_QT_OBJECT_FIRST;
    CLOSE GET_QT_OBJECT_SECOND;
    
    --===================
    --COMPARE ITEM CODE LIST (ADD)
    --===================
    OPEN GET_QT_OBJECT_FIRST(RATE_BASE_DATE_SECOND);
    FETCH GET_QT_OBJECT_FIRST BULK COLLECT INTO RES_SET1;
    OPEN GET_QT_OBJECT_SECOND(RATE_BASE_DATE_FIRST);
    FETCH GET_QT_OBJECT_SECOND BULK COLLECT INTO RES_SET2;
    IF (RES_SET1.COUNT > 0 AND RES_SET2.COUNT > 0) THEN
      FOR C IN RES_SET1.FIRST .. RES_SET1.LAST LOOP
        FOUND := 'N';
        FOR D IN RES_SET2.FIRST .. RES_SET2.LAST LOOP
          IF (RES_SET1(C).PROD_CD = RES_SET2(D).PROD_CD AND RES_SET1(C).INFO_TYP = RES_SET2(D).INFO_TYP AND RES_SET1(C).INFO_TYP_ITM = RES_SET2(D).INFO_TYP_ITM) THEN
            FOUND := 'Y';
          END IF;
        END LOOP;
        IF (FOUND = 'N') THEN
          ITEM_RES.EXTEND;
          ITEM_RES(V_INDEX).CONTROL := 'ADD'; 
          ITEM_RES(V_INDEX).INFO_TYP_ITM := RES_SET1(C).INFO_TYP_ITM;
          --DBMS_OUTPUT.PUT_LINE(ITEM_RES(V_INDEX).CONTROL||' '||ITEM_RES(V_INDEX).INFO_TYP_ITM);
          V_INDEX := V_INDEX + 1;      
        END IF;    
      END LOOP;    
    END IF;
    CLOSE GET_QT_OBJECT_FIRST;
    CLOSE GET_QT_OBJECT_SECOND;
    
    IF (UPPER(DP_ITEM_LIST) = 'Y') THEN
      --===================
      --PRINT ITEM CHECK RESULT
      --===================
      IF( ITEM_RES.COUNT > 0) THEN
        FOR C IN ITEM_RES.FIRST .. ITEM_RES.LAST LOOP
          DBMS_OUTPUT.PUT_LINE(ITEM_RES(C).CONTROL||' '||ITEM_RES(C).INFO_TYP_ITM);
        END LOOP;
      END IF;
    END IF;

    IF (UPPER(CP_QUOT_ITEM) = 'Y') THEN
      --===================
      --CHECK QUOTATION ITEMS
      --===================       
      IF( Q_ITEM_LIST.COUNT > 0 AND ITEM_RES.COUNT > 0 ) THEN  
        IF( DSGN_RATE_BASE_DATE = RATE_BASE_DATE_SECOND ) THEN
          FOR C IN ITEM_RES.FIRST .. ITEM_RES.LAST LOOP
            IF ITEM_RES(C).CONTROL = 'ADD' THEN
              FOUND := 'N';
              FOR D IN Q_ITEM_LIST.FIRST .. Q_ITEM_LIST.LAST LOOP
                IF( ITEM_RES(C).INFO_TYP_ITM = Q_ITEM_LIST(D) ) THEN
                  FOUND := 'Y';
                END IF;
              END LOOP;
              IF( FOUND = 'N' ) THEN
                DBMS_OUTPUT.PUT_LINE('QUOTATION RATE_BASE_DATE_SECOND-ADD '||ITEM_RES(C).INFO_TYP_ITM);
              END IF;      
            ELSIF ITEM_RES(C).CONTROL = 'DELETE' THEN
              FOUND := 'N';
              FOR D IN Q_ITEM_LIST.FIRST .. Q_ITEM_LIST.LAST LOOP
                IF( ITEM_RES(C).INFO_TYP_ITM = Q_ITEM_LIST(D) ) THEN
                  FOUND := 'Y';
                END IF;
              END LOOP;
              IF( FOUND = 'Y' ) THEN
                DBMS_OUTPUT.PUT_LINE('QUOTATION RATE_BASE_DATE_SECOND-DELETE '||ITEM_RES(C).INFO_TYP_ITM);
              END IF;
            END IF;      
          END LOOP;
        ELSIF( DSGN_RATE_BASE_DATE = RATE_BASE_DATE_FIRST ) THEN 
          FOR C IN ITEM_RES.FIRST .. ITEM_RES.LAST LOOP
            IF ITEM_RES(C).CONTROL = 'ADD' THEN
              FOUND := 'N';
              FOR D IN Q_ITEM_LIST.FIRST .. Q_ITEM_LIST.LAST LOOP
                IF( ITEM_RES(C).INFO_TYP_ITM = Q_ITEM_LIST(D) ) THEN
                  FOUND := 'Y';
                END IF;
              END LOOP;
              IF( FOUND = 'Y' ) THEN
                DBMS_OUTPUT.PUT_LINE('QUOTATION RATE_BASE_DATE_FIRST-REMOVE '||ITEM_RES(C).INFO_TYP_ITM);
              END IF;      
            ELSIF ITEM_RES(C).CONTROL = 'DELETE' THEN
              FOUND := 'N';
              FOR D IN Q_ITEM_LIST.FIRST .. Q_ITEM_LIST.LAST LOOP
                IF( ITEM_RES(C).INFO_TYP_ITM = Q_ITEM_LIST(D) ) THEN
                  FOUND := 'Y';
                END IF;
              END LOOP;
              IF( FOUND = 'N' ) THEN
                DBMS_OUTPUT.PUT_LINE('QUOTATION RATE_BASE_DATE_FIRST-ADD '||ITEM_RES(C).INFO_TYP_ITM);
              END IF;
            END IF;      
          END LOOP;      
        END IF;
      END IF;
    
      --===================
      --CHECK SALES ITEMS
      --===================          
      IF( S_ITEM_LIST.COUNT > 0 AND ITEM_RES.COUNT > 0 ) THEN  
        IF( SALE_RATE_BASE_DATE = RATE_BASE_DATE_SECOND ) THEN
          FOR C IN ITEM_RES.FIRST .. ITEM_RES.LAST LOOP
            IF ITEM_RES(C).CONTROL = 'ADD' THEN
              FOUND := 'N';
              FOR D IN S_ITEM_LIST.FIRST .. S_ITEM_LIST.LAST LOOP
                IF( ITEM_RES(C).INFO_TYP_ITM = S_ITEM_LIST(D) ) THEN
                  FOUND := 'Y';
                END IF;
              END LOOP;
              IF( FOUND = 'N' ) THEN
                DBMS_OUTPUT.PUT_LINE('SALE RATE_BASE_DATE_SECOND-ADD '||ITEM_RES(C).INFO_TYP_ITM);
              END IF;      
            ELSIF ITEM_RES(C).CONTROL = 'DELETE' THEN
              FOUND := 'N';
              FOR D IN S_ITEM_LIST.FIRST .. S_ITEM_LIST.LAST LOOP
                IF( ITEM_RES(C).INFO_TYP_ITM = S_ITEM_LIST(D) ) THEN
                  FOUND := 'Y';
                END IF;
              END LOOP;
              IF( FOUND = 'Y' ) THEN
                DBMS_OUTPUT.PUT_LINE('SALE RATE_BASE_DATE_SECOND-DELETE '||ITEM_RES(C).INFO_TYP_ITM);
              END IF;
            END IF;      
          END LOOP;
        ELSIF( SALE_RATE_BASE_DATE = RATE_BASE_DATE_FIRST ) THEN 
          FOR C IN ITEM_RES.FIRST .. ITEM_RES.LAST LOOP
            IF ITEM_RES(C).CONTROL = 'ADD' THEN
              FOUND := 'N';
              FOR D IN S_ITEM_LIST.FIRST .. S_ITEM_LIST.LAST LOOP
                IF( ITEM_RES(C).INFO_TYP_ITM = S_ITEM_LIST(D) ) THEN
                  FOUND := 'Y';
                END IF;
              END LOOP;
              IF( FOUND = 'Y' ) THEN
                DBMS_OUTPUT.PUT_LINE('SALE RATE_BASE_DATE_FIRST-REMOVE '||ITEM_RES(C).INFO_TYP_ITM);
              END IF;      
            ELSIF ITEM_RES(C).CONTROL = 'DELETE' THEN
              FOUND := 'N';
              FOR D IN S_ITEM_LIST.FIRST .. S_ITEM_LIST.LAST LOOP
                IF( ITEM_RES(C).INFO_TYP_ITM = S_ITEM_LIST(D) ) THEN
                  FOUND := 'Y';
                END IF;
              END LOOP;
              IF( FOUND = 'N' ) THEN
                DBMS_OUTPUT.PUT_LINE('SALE RATE_BASE_DATE_FIRST-ADD '||ITEM_RES(C).INFO_TYP_ITM);
              END IF;
            END IF;      
          END LOOP;      
        END IF;
      END IF;
    END IF;
    
    --===================    
    --Compare Item Values with given quotation
    --===================    
    IF (UPPER(CP_QUOT_ITEM_VAL) = 'Y') THEN
      --===================    
      --CHECK ITEM VALUES OF QUOTATION
      --===================    
      IF( ITEM_LIST_VAL1.COUNT > 0 AND ITEM_LIST_VAL2.COUNT > 0 ) THEN  
        FOR C IN ITEM_LIST_VAL1.FIRST .. ITEM_LIST_VAL1.LAST LOOP
          FOR D IN ITEM_LIST_VAL2.FIRST .. ITEM_LIST_VAL2.LAST LOOP
            IF ITEM_LIST_VAL1(C).INFO_CD = ITEM_LIST_VAL2(D).INFO_CD THEN
              IF ITEM_LIST_VAL1(C).DATATYPE = 'T' THEN
                IF (ITEM_LIST_VAL1(C).INFO_TEXT != ITEM_LIST_VAL2(D).INFO_TEXT) THEN
                  DBMS_OUTPUT.PUT_LINE(COMP1||' // '||COMP2||' ITEM VALUES DIFF. ITEM_CD:'||ITEM_LIST_VAL1(C).INFO_CD||', ITEM_TEXT1:'||ITEM_LIST_VAL1(C).INFO_TEXT||', ITEM_TEXT2:'||ITEM_LIST_VAL2(D).INFO_TEXT||', DATATYPE:'||ITEM_LIST_VAL1(C).DATATYPE);
                END IF;
              ELSIF ITEM_LIST_VAL1(C).DATATYPE = 'N' THEN
                IF (ITEM_LIST_VAL1(C).INFO_NUM != ITEM_LIST_VAL2(D).INFO_NUM) THEN
                  DBMS_OUTPUT.PUT_LINE(COMP1||' // '||COMP2||' ITEM VALUES DIFF. ITEM_CD:'||ITEM_LIST_VAL1(C).INFO_CD||', ITEM_NUM1:'||ITEM_LIST_VAL1(C).INFO_NUM||', ITEM_NUM2:'||ITEM_LIST_VAL2(D).INFO_NUM||', DATATYPE:'||ITEM_LIST_VAL1(C).DATATYPE);
                END IF;              
              END IF;
            END IF;
          END LOOP;
        END LOOP;
      END IF;
      
    END IF;

  END IF; 
END;
/

--===================    
--CHECK ITEM
--=================== 
SET SERVEROUTPUT ON;
SET VERIFY OFF;
DECLARE
  RES1 VARCHAR2(125);
  RES2 VARCHAR2(125);
BEGIN
  FOR C IN (SELECT * FROM CMCD0300TB WHERE GRP_ID = 'CODS006024' ORDER BY DESC1, CODE_ID) LOOP
    IF (C.DESC1 = 'DELETE') THEN
      SELECT APP_END_DATE INTO RES1 FROM PDIT0100TB WHERE INFO_TYP_ITM = C.CODE_NAME;
      IF( RES1 != '20170831' ) THEN
        DBMS_OUTPUT.PUT_LINE('DELETE ERROR. CODE: '||C.CODE_ID||', APP_END_DATE: '||RES1);
      ELSE
        DBMS_OUTPUT.PUT_LINE('DELETE CODE OK: '||C.CODE_ID||', APP_END_DATE: '||RES1);
      END IF;
    ELSIF (C.DESC1 = 'ADD') THEN
      SELECT APP_STA_DATE INTO RES1 FROM PDIT0100TB WHERE INFO_TYP_ITM = C.CODE_NAME;
      IF( RES1 != '20170901' ) THEN
        DBMS_OUTPUT.PUT_LINE('ADD ERROR. CODE: '||C.CODE_ID||', APP_STA_DATE: '||RES1);
      ELSE
        DBMS_OUTPUT.PUT_LINE('ADD CODE OK: '||C.CODE_ID||', APP_STA_DATE: '||RES1);
      END IF;     
    ELSIF (C.DESC1 = 'CHANGE_NAME') THEN
      SELECT ITM_NM INTO RES1 FROM PDIT0100TB WHERE INFO_TYP_ITM = C.CODE_NAME;
      SELECT COUNT(1) INTO RES2 FROM CMCD0300TB WHERE CODE_NAME = RES1 AND CODE_ID = '20170901';
      IF( RES2 IS NULL ) THEN
        DBMS_OUTPUT.PUT_LINE('CHANGE_NAME ERROR. CODE: '||C.CODE_ID||', NAME: '||RES1||', Match: '||RES2);
      ELSE
        DBMS_OUTPUT.PUT_LINE('CHANGE_NAME OK. CODE: '||C.CODE_ID||', NAME: '||RES1||', Match: '||RES2);
      END IF;      
    END IF;    
  END LOOP;
END;
/

SELECT * FROM CMCD0300TB WHERE GRP_ID = 'CODS006024' AND DESC1 = 'CHANGE_NAME';
SELECT CODE_ID FROM CMCD0300TB WHERE GRP_ID = 'CODS006024' AND DESC1 = 'CHANGE_NAME';
SELECT * FROM CMCD0300TB WHERE CODE_NAME IN (SELECT ITM_NM FROM PDIT0100TB WHERE INFO_TYP_ITM IN (SELECT CODE_ID FROM CMCD0300TB WHERE GRP_ID = 'CODS006024' AND DESC1 = 'CHANGE_NAME'));

SELECT * FROM CMCD0200TB WHERE GRP_ID IN ('CODS006926','CODS006927','CODS006928','CODS006929','CODS006930','CODS006931','CODS006932','CODS006933','CODS006934','CODS006903','CODS006904','CODS006905','CODS006906','CODS006907','CODS006908','CODS006909','CODS006915','CODS006919','CODS006920','CODS006921','CODS006923','CODS006924','CODS006925') ORDER BY GRP_ID;
SELECT * FROM CMCD0300TB WHERE GRP_ID IN ('CODS006926','CODS006927','CODS006928','CODS006929','CODS006930','CODS006931','CODS006932','CODS006933','CODS006934','CODS006903','CODS006904','CODS006905','CODS006906','CODS006907','CODS006908','CODS006909','CODS006915','CODS006919','CODS006920','CODS006921','CODS006923','CODS006924','CODS006925') ORDER BY GRP_ID;

--ADD
SELECT * FROM PDIT0100TB WHERE INFO_TYP_ITM IN ('I2001','N1693','I2003','N1435','N1436','N1437','N1438','N1439','N1314','N1315','N1316','N1317','MP227','MP228','N1520','N1521','N1522','N1523','N1524','N1525','N1526','N1527','N1528','N1529','N1530','N1531','N1532','N1533','N1534','N1535','N1536','N1537','N1538','N1539','N1540','N1541','N1542','N1543','N1544','N1545','N1546','N1547','N1548','N1549','N1550','N1551','N1552','N1553','N1554','N1555','N1556','N1557','N1558','N1559','N1691','N1692','I2002');
SELECT * FROM PDIT0110TB WHERE INFO_TYP_ITM IN ('I2001','N1693','I2003','N1435','N1436','N1437','N1438','N1439','N1314','N1315','N1316','N1317','MP227','MP228','N1520','N1521','N1522','N1523','N1524','N1525','N1526','N1527','N1528','N1529','N1530','N1531','N1532','N1533','N1534','N1535','N1536','N1537','N1538','N1539','N1540','N1541','N1542','N1543','N1544','N1545','N1546','N1547','N1548','N1549','N1550','N1551','N1552','N1553','N1554','N1555','N1556','N1557','N1558','N1559','N1691','N1692','I2002');
SELECT * FROM PDOB0100TB WHERE OBJ_TYP_ITM IN ('I2001','N1693','I2003','N1435','N1436','N1437','N1438','N1439','N1314','N1315','N1316','N1317','MP227','MP228','N1520','N1521','N1522','N1523','N1524','N1525','N1526','N1527','N1528','N1529','N1530','N1531','N1532','N1533','N1534','N1535','N1536','N1537','N1538','N1539','N1540','N1541','N1542','N1543','N1544','N1545','N1546','N1547','N1548','N1549','N1550','N1551','N1552','N1553','N1554','N1555','N1556','N1557','N1558','N1559','N1691','N1692','I2002');
SELECT * FROM PDOB0110TB WHERE INFO_TYP_ITM IN ('I2001','N1693','I2003','N1435','N1436','N1437','N1438','N1439','N1314','N1315','N1316','N1317','MP227','MP228','N1520','N1521','N1522','N1523','N1524','N1525','N1526','N1527','N1528','N1529','N1530','N1531','N1532','N1533','N1534','N1535','N1536','N1537','N1538','N1539','N1540','N1541','N1542','N1543','N1544','N1545','N1546','N1547','N1548','N1549','N1550','N1551','N1552','N1553','N1554','N1555','N1556','N1557','N1558','N1559','N1691','N1692','I2002');
SELECT * FROM PDOB0120TB WHERE OBJ_TYP_ITM IN ('I2001','N1693','I2003','N1435','N1436','N1437','N1438','N1439','N1314','N1315','N1316','N1317','MP227','MP228','N1520','N1521','N1522','N1523','N1524','N1525','N1526','N1527','N1528','N1529','N1530','N1531','N1532','N1533','N1534','N1535','N1536','N1537','N1538','N1539','N1540','N1541','N1542','N1543','N1544','N1545','N1546','N1547','N1548','N1549','N1550','N1551','N1552','N1553','N1554','N1555','N1556','N1557','N1558','N1559','N1691','N1692','I2002');
SELECT * FROM PDOB0130TB WHERE OBJ_TYP_ITM IN ('I2001','N1693','I2003','N1435','N1436','N1437','N1438','N1439','N1314','N1315','N1316','N1317','MP227','MP228','N1520','N1521','N1522','N1523','N1524','N1525','N1526','N1527','N1528','N1529','N1530','N1531','N1532','N1533','N1534','N1535','N1536','N1537','N1538','N1539','N1540','N1541','N1542','N1543','N1544','N1545','N1546','N1547','N1548','N1549','N1550','N1551','N1552','N1553','N1554','N1555','N1556','N1557','N1558','N1559','N1691','N1692','I2002');
SELECT * FROM PDUM0000TB WHERE ITM_CD IN ();
--DELETE

--CHANGE

--======================================
--CHECK ITEM VALUES IN ALL COLUMNS
--======================================
ALTER SESSION FORCE PARALLEL DML PARALLEL 4;
ALTER SESSION FORCE PARALLEL DDL PARALLEL 4;
SET SERVEROUTPUT ON ;
SET VERIFY OFF ;
DECLARE
  RES1 VARCHAR2(32) := '';
  TYPE R1 IS RECORD
  (
    TABLE_NAME VARCHAR2(32),
    COLUMN_NAME VARCHAR2(32)
  );
  TYPE T1 IS TABLE OF R1;
  V_LIST T1 := T1();
  
  CURSOR C1 
  IS 
  SELECT TABLE_NAME, COLUMN_NAME 
  FROM DBA_TAB_COLS 
  WHERE OWNER = 'AXADJ' AND DATA_TYPE IN ('CHAR','VARCHAR2','CLOB')
  AND TABLE_NAME NOT LIKE 'BIN$%'
  ORDER BY TABLE_NAME;
BEGIN
  DBMS_OUTPUT.ENABLE(99999999);
  OPEN C1;
    FETCH C1 BULK COLLECT INTO V_LIST;
  CLOSE C1;
  IF (V_LIST.COUNT > 0 ) THEN
    FOR C IN V_LIST.FIRST .. V_LIST.LAST LOOP
      BEGIN
        EXECUTE IMMEDIATE 'SELECT COUNT(1) FROM '||V_LIST(C).TABLE_NAME||' WHERE '||V_LIST(C).COLUMN_NAME||' = ''«¹«¿«ó«À?«É?«×?«É«ë'' ' INTO RES1;
      EXCEPTION WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('ERROR '||V_LIST(C).TABLE_NAME||'//'||V_LIST(C).COLUMN_NAME);
      END;
      IF (RES1 > 0) THEN
        DBMS_OUTPUT.PUT_LINE(V_LIST(C).TABLE_NAME||'//'||V_LIST(C).COLUMN_NAME);
      END IF;
    END LOOP;
  END IF;
END;
/

SELECT
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM ADFS0230TB WHERE MATERIAL_ID = 'M20620' AND ITEM_CODE = 'PET_221') AS DIFF_ADFS0230TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM ADFS0310TB WHERE ITEM_CODE = 'PET_221') AS DIFF_ADFS0310TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM ADFS0410TB WHERE LAYOUT_ID = 'L20614' AND ITEM_CODE = 'PET_221') AS DIFF_ADFS0410TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM CMAT0000TB WHERE SCREEN_ID = 'NBPT0001' AND ACTION_ID = 'P14') AS DIFF_CMAT0000TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM CMAT0100TB WHERE SCREEN_ID = 'NBPT0001' AND ACTION_ID = 'P14') AS DIFF_CMAT0100TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM CMAT0200TB WHERE SCREEN_ID = 'NBPT0001' AND ACTION_ID = 'P14') AS DIFF_CMAT0200TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM CMAT0210TB WHERE SCREEN_ID = 'NBPT0006' AND ACTION_ID = 'I20') AS DIFF_CMAT0210TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM CMAT1000TB WHERE SCREEN_ID = 'NBPT0006' AND ACTION_ID = 'I20') AS DIFF_CMAT1000TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM CMCD0200TB WHERE GRP_ID = 'CODS006024' AND GRP_NAME = 'PetRevisionManagement-PetRevision2016') AS DIFF_CMCD0200TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM CMCD0300TB WHERE GRP_ID = 'CODS006001' AND CODE_ID = '227' AND CODE_NAME = '«ß«Ã«¯«¹£¨Îß?ðú£©') AS DIFF_CMCD0300TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM CODO0200TB C WHERE C.OBJT_ITEM_CD = 'MP202' AND EXISTS (SELECT 1 FROM CODO0200TB WHERE ENTY_DSGN_NO = C.ENTY_DSGN_NO AND OBJT_ITEM_CD = 'MP217' AND ITEM_TEXT IN ('102','230') AND C.ITEM_TEXT IN ('«¹«¿«ó«À?«É?«×?«É«ë', '«»«ó«È«é«ë?«¢«¸«¢?«·«§«Ñ?«É?«É«Ã«°')) ) AS DIFF_CODO0200TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM CTCO0200TB C WHERE C.OBJT_ITEM_CD = 'MP202' AND EXISTS (SELECT 1 FROM CTCO0200TB WHERE PLCY_NO = C.PLCY_NO AND OBJT_ITEM_CD = 'MP217' AND ITEM_TEXT IN ('102','230') AND C.ITEM_TEXT IN ('«¹«¿«ó«À?«É?«×?«É«ë', '«»«ó«È«é«ë?«¢«¸«¢?«·«§«Ñ?«É?«É«Ã«°')) ) AS DIFF_CTCO0200TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM LPDPM6000TB WHERE INS_PERI = '45' AND PET_KIND_CODE = '02' AND PET_TYPE_CODE = '07' AND APPL_PREM = '1990') AS DIFF_LPDPM6000TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM PDIT0100TB WHERE INFO_TYP_ITM = 'N1317' AND ITM_NM = '13.Ø·àõãìÜôîï') AS DIFF_PDIT0100TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM PDIT0110TB WHERE INFO_TYP_ITM = 'N1438') AS DIFF_PDIT0110TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM PDIT0210TB WHERE INFO_TYP_ITM = 'I2002') AS DIFF_PDIT0210TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM PDIT0213TB WHERE INFO_TYP_ITM = 'I2002') AS DIFF_PDIT0213TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM PDMS0200TB WHERE APP_END_DATE = '20170831' AND PROD_CD = '60001' AND CHNG_HIST_CD = '201103181') AS DIFF_PDMS0200TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM PDOB0100TB WHERE OBJ_TYP_ITM = 'MP227') AS DIFF_PDOB0100TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM PDOB0110TB WHERE INFO_TYP_ITM = 'N1106' AND SEQ = '1' AND DEFAULT_YN = 'N') AS DIFF_PDOB0110TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM PDOB0120TB WHERE OBJ_TYP_ITM = 'MP227') AS DIFF_PDOB0120TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM PDOB0130TB WHERE OBJ_TYP_ITM = 'N1557') AS DIFF_PDOB0130TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM PDPM0200TB WHERE RATE_CODE = 'T5109') AS DIFF_PDPM0200TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM PDPM0400TB WHERE CAL_EXPRE = '((ROUND(((ROUND(((@T5114@*@T5104@)*(1-@T5105@)),0)+0)/(1-@T5110@-0.53)*(1-0)),-1)-0)*(1+@T5106@)*@T5113@/@00007@)') AS DIFF_PDPM0400TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM PDPM1000TB WHERE PRD_CODE = '60001' AND RATE_APPL_DATE = '20170601' AND RATE_BASE_DATE = '20170901' AND DESCRIPTION = 'pet product rev2016') AS DIFF_PDPM1000TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM PDRA0000TB WHERE RATE_TABLE_NO = '60001130') AS DIFF_PDRA0000TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM PDRA0100TB WHERE RATE_TABLE_NO = '60001130') AS DIFF_PDRA0100TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM PDRA0140TB WHERE RATE_TABLE_NO = '60001130' AND RATE_DETAIL_NO = '1' AND SERIAL_NO = '3' AND DATA_VAL1 = '1.4286') AS DIFF_PDRA0140TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM PDRA0190TB WHERE RATE_TABLE_NO = '60001130') AS DIFF_PDRA0190TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM PDUM0000TB WHERE ITM_NM = '13.Ø·àõãìÜôîï') AS DIFF_PDUM0000TB,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM DBA_OBJECTS WHERE OBJECT_NAME = 'FN_CHECK_IDENTICAL_PET') AS FN_CHECK_IDENTICAL_PET,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM DBA_OBJECTS WHERE OBJECT_NAME = 'FN_IS_AVAILABLE_IP_TARGET') AS FN_IS_AVAILABLE_IP_TARGET,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM DBA_OBJECTS WHERE OBJECT_NAME = 'AD_BAD_CUSTOMER_INFO') AS AD_BAD_CUSTOMER_INFO,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM DBA_PROCEDURES WHERE OBJECT_NAME = 'DB_PARTNER_API' AND PROCEDURE_NAME = 'FN_CHECK_BAD_CUSTOMER') AS FN_CHECK_BAD_CUSTOMER,
(SELECT CASE WHEN COUNT(BC_CHECK_FLG) > 0 THEN 'EXIST' ELSE 'EXIST' END FROM LCTCE6100TB) AS BC_CHECK_FLG,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM CMCD0300TB WHERE GRP_ID = 'CODS006015') AS CODS006015,
(SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM CMCD0300TB WHERE GRP_ID = 'CTCE006009') AS CTCE006009,
(SELECT COUNT(1) FROM CMCD0300TB WHERE GRP_ID = 'CODS006001') AS TOTAL_CODS006001
FROM DUAL;

SELECT 
  (SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM DBA_OBJECTS WHERE OWNER = 'AXADJ' AND OBJECT_TYPE = 'FUNCTION' AND OBJECT_NAME = 'FN_CHECK_IDENTICAL_PET') AS FUNC_CHECK_IP,
  (SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM DBA_OBJECTS WHERE OWNER = 'AXADJ' AND OBJECT_TYPE = 'FUNCTION' AND OBJECT_NAME = 'FN_IS_AVAILABLE_IP_TARGET') AS FUNC_CHECK_IP_TARGET,
  (SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM DBA_TAB_PRIVS WHERE GRANTOR = 'AXADJ' AND GRANTEE = 'APPUSER' AND PRIVILEGE = 'EXECUTE' AND TABLE_NAME = 'FN_CHECK_IDENTICAL_PET') AS PRIV_CHECK_IP_APPUSER,
  (SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM DBA_TAB_PRIVS WHERE GRANTOR = 'AXADJ' AND GRANTEE = 'APPUSER' AND PRIVILEGE = 'EXECUTE' AND TABLE_NAME = 'FN_IS_AVAILABLE_IP_TARGET') AS PRIV_CHECK_IP_TARGET_APPUSER,
  (SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM DBA_SYNONYMS WHERE OWNER = 'APPUSER' AND TABLE_NAME = 'FN_CHECK_IDENTICAL_PET') AS SYN_CHECK_IP_APPUSER,
  (SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM DBA_SYNONYMS WHERE OWNER = 'APPUSER' AND TABLE_NAME = 'FN_IS_AVAILABLE_IP_TARGET') AS SYN_CHECK_IP_TARGET_APPUSER,
  (SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM DBA_COL_COMMENTS WHERE TABLE_NAME = 'LPDPM6000TB' AND COLUMN_NAME = 'PET_TYPE_CODE' AND COMMENTS IS NOT NULL) AS COMMENT_CHECK_LPDPM6000TB,
  (SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM DBA_COL_COMMENTS WHERE TABLE_NAME = 'LCTCE6100TB' AND COLUMN_NAME = 'BC_CHECK_FLG' AND COMMENTS IS NOT NULL) AS COMMENT_CHECK_LCTCE6100TB,
  (SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM DBA_TAB_COLUMNS WHERE OWNER = 'AXADJ' AND TABLE_NAME = 'LCTCE6100TB' AND COLUMN_NAME = 'BC_CHECK_FLG') AS COL_CHECK_LCTCE6100TB,
  (SELECT CASE WHEN COUNT(1) > 0 THEN 'FOUND' ELSE 'NOT FOUND' END FROM DBA_PROCEDURES WHERE OBJECT_NAME = 'DB_PARTNER_API' AND PROCEDURE_NAME = 'FN_CHECK_BAD_CUSTOMER') AS FUNC_CHECK_BC  
  -- CHECK SYNONYM "PARINTERFACE"."AD_BAD_CUSTOMER_INFO"
  -- CHECK SELECT GRANT ON AD_BAD_CUSTOMER_INFO ON JAPHONIE
FROM DUAL;
;



  
--========================================================
--DISEASE INFO DISPLAY BASED ON RENEWAL QUOTATION NUMBER
--========================================================
SELECT  LPAD(' ', LEVEL, ' ') || NVL(PLCY_NO, '-') AS PLCY_NO, 
        SUBSTR(A.AGRM_START_DATE, 1,4) AS YYYY,
        A.ENTY_DSGN_NO AS PROPOSAL_NO, 
        A.AGRM_START_DATE||' ~ '||TO_CHAR(TO_DATE(A.AGRM_END_DATE,'YYYYMMDD') - (INTERVAL '1' DAY),'YYYYMMDD') AS INSURANCE_PERIOD,
        (SELECT FULL_NAME FROM CUPT0000TB WHERE PTY_ID = B.CONTOR_ID) AS PH_NAME,
        (SELECT FULL_NAME FROM CUPT0000TB WHERE PTY_ID = A.PIBOJA_ID) AS NI_NAME,
        (SELECT ITEM_TEXT FROM CODO0200TB WHERE ENTY_DSGN_NO = A.ENTY_DSGN_NO AND OBJT_ITEM_CD = 'M0103' AND ETSTATUS = 'A' AND APPL_END_DATE = '29991231') AS PET_NAME,
        (SELECT WM_CONCAT(ITM_NM) 
         FROM PDIT0100TB A
         WHERE INFO_TYP_ITM IN (SELECT OBJT_ITEM_CD 
                                FROM CODO0200TB 
                                WHERE ENTY_DSGN_NO = A.ENTY_DSGN_NO 
                                AND OBJT_ITEM_CD LIKE 'N14%' 
                                AND ITEM_TEXT = '1' 
                                AND ETSTATUS = 'A' 
                                AND APPL_END_DATE = '29991231' 
                                AND OBJT_ITEM_CD != 'N1432')) AS CHECKED_DISEASE_NAME,
        (SELECT WM_CONCAT(DISTINCT CODE_NAME) TITLE
          FROM CODO0200TB E
             , CMCD0200TB D
             , CMCD0300TB C
             , CODE0000TB F
         WHERE E.ENTY_DSGN_NO = A.ENTY_DSGN_NO
           AND D.GRP_ID = CASE WHEN F.AGRM_START_DATE >= '20170901' THEN 'CODS006021' ELSE 'CODS006005' END
           AND C.GRP_ID = D.GRP_ID
           AND SUBSTR(C.CODE_ID,1,5) = E.OBJT_ITEM_CD
           AND E.ITEM_TEXT = '1'
           AND E.APPL_END_DATE = '29991231'
           AND E.ENTY_DSGN_NO = F.ENTY_DSGN_NO) AS UNCOVERED_DISEASE_NAME,
           (SELECT ITEM_TEXT FROM CODO0200TB WHERE ENTY_DSGN_NO = A.ENTY_DSGN_NO AND OBJT_ITEM_CD = 'N1433' AND ETSTATUS = 'A' AND APPL_END_DATE = '29991231') AS OTHER_UNCOVERED_DISEASE_NAME,
           A.PREV_PLCY_NO,
        (SELECT WM_CONCAT(ITM_NM)
          FROM PDIT0100TB A
          WHERE INFO_TYP_ITM IN 
          (SELECT OBJT_ITEM_CD 
          FROM CTCO0200TB 
          WHERE PLCY_NO = A.PREV_PLCY_NO
          AND OBJT_ITEM_CD LIKE 'N14%' 
          AND ITEM_TEXT = '1' 
          AND OBJT_ITEM_CD != 'N1432'
          AND ETSTATUS = 'A'
          AND APPL_END_DATE = '29991231')) AS A_PREVIOUS_POLICY_NO,
        (SELECT WM_CONCAT(DISTINCT CODE_NAME) TITLE
          FROM CTCO0200TB E
             , CMCD0200TB D
             , CMCD0300TB C
             , CTCE0000TB F
         WHERE E.PLCY_NO = A.PREV_PLCY_NO
           AND D.GRP_ID = CASE WHEN F.AGRM_START_DATE >= '20170901' THEN 'CODS006021' ELSE 'CODS006005' END
           AND C.GRP_ID = D.GRP_ID
           AND SUBSTR(C.CODE_ID,1,5) = E.OBJT_ITEM_CD
           AND E.ITEM_TEXT = '1'
           AND E.ETSTATUS = 'A'
           AND E.APPL_END_DATE = '29991231'
           AND E.PLCY_NO = F.PLCY_NO) AS DISEASE_CODE_NAME,          
        (SELECT ITEM_TEXT FROM CTCO0200TB WHERE PLCY_NO = A.PLCY_NO AND OBJT_ITEM_CD = 'N1433' AND ETSTATUS = 'A' AND APPL_END_DATE = '29991231') AS UNCOVERED_DISEASE_NAME
FROM (SELECT * FROM CODE0000TB WHERE ENTY_DSGN_NO LIKE 'C%' OR ENTY_DSGN_NO LIKE 'B%') A, CODS0000TB B 
WHERE A.ENTY_DSGN_NO = B.ENTY_DSGN_NO
START WITH A.PLCY_NO LIKE 'A18060000043%' -- ex) A1709%
CONNECT BY PRIOR A.PLCY_NO = A.PREV_PLCY_NO;


SELECT  LEVEL AS DEPTH, 
        A.ENTY_DSGN_NO AS PROPOSAL_NO, 
        A.AGRM_START_DATE||' ~ '||TO_CHAR(TO_DATE(A.AGRM_END_DATE-1,'YYYYMMDD'),'YYYYMMDD') AS INSURANCE_PERIOD,
        (SELECT FULL_NAME FROM CUPT0000TB WHERE PTY_ID = B.CONTOR_ID) AS PH_NAME,
        (SELECT FULL_NAME FROM CUPT0000TB WHERE PTY_ID = A.PIBOJA_ID) AS NI_NAME,
        (SELECT ITEM_TEXT FROM CODO0200TB WHERE ENTY_DSGN_NO = A.ENTY_DSGN_NO AND OBJT_ITEM_CD = 'M0103' AND ETSTATUS = 'A' AND APPL_END_DATE = '29991231') AS PET_NAME,
        (SELECT WM_CONCAT(ITM_NM) 
         FROM PDIT0100TB A
         WHERE INFO_TYP_ITM IN (SELECT OBJT_ITEM_CD 
                                FROM CODO0200TB 
                                WHERE ENTY_DSGN_NO = A.ENTY_DSGN_NO 
                                AND OBJT_ITEM_CD LIKE 'N14%' 
                                AND ITEM_TEXT = '1' 
                                AND ETSTATUS = 'A' 
                                AND APPL_END_DATE = '29991231' 
                                AND OBJT_ITEM_CD != 'N1432')) AS CHECKED_DISEASE_NAME,
        (SELECT WM_CONCAT(DISTINCT CODE_NAME) TITLE
          FROM CODO0200TB E
             , CMCD0200TB D
             , CMCD0300TB C
             , CODE0000TB F
         WHERE E.ENTY_DSGN_NO = A.ENTY_DSGN_NO
           AND D.GRP_ID = CASE WHEN F.AGRM_START_DATE >= '20170901' THEN 'CODS006021' ELSE 'CODS006005' END
           AND C.GRP_ID = D.GRP_ID
           AND SUBSTR(C.CODE_ID,1,5) = E.OBJT_ITEM_CD
           AND E.ITEM_TEXT = '1'
           AND E.APPL_END_DATE = '29991231'
           AND E.ENTY_DSGN_NO = F.ENTY_DSGN_NO) AS UNCOVERED_DISEASE_NAME,
           (SELECT ITEM_TEXT FROM CODO0200TB WHERE ENTY_DSGN_NO = A.ENTY_DSGN_NO AND OBJT_ITEM_CD = 'N1433' AND ETSTATUS = 'A' AND APPL_END_DATE = '29991231') AS OTHER_UNCOVERED_DISEASE_NAME,
           A.PREV_PLCY_NO,
        (SELECT WM_CONCAT(ITM_NM)
          FROM PDIT0100TB A
          WHERE INFO_TYP_ITM IN 
          (SELECT OBJT_ITEM_CD 
          FROM CTCO0200TB 
          WHERE PLCY_NO = A.PREV_PLCY_NO
          AND OBJT_ITEM_CD LIKE 'N14%' 
          AND ITEM_TEXT = '1' 
          AND OBJT_ITEM_CD != 'N1432'
          AND ETSTATUS = 'A'
          AND APPL_END_DATE = '29991231')) AS îñÒ´ÓøNB÷åïÒòðÜ»Ù£?,
        (SELECT WM_CONCAT(DISTINCT CODE_NAME) TITLE
          FROM CTCO0200TB E
             , CMCD0200TB D
             , CMCD0300TB C
             , CTCE0000TB F
         WHERE E.PLCY_NO = A.PREV_PLCY_NO
           AND D.GRP_ID = CASE WHEN F.AGRM_START_DATE >= '20170901' THEN 'CODS006021' ELSE 'CODS006005' END
           AND C.GRP_ID = D.GRP_ID
           AND SUBSTR(C.CODE_ID,1,5) = E.OBJT_ITEM_CD
           AND E.ITEM_TEXT = '1'
           AND E.ETSTATUS = 'A'
           AND E.APPL_END_DATE = '29991231'
           AND E.PLCY_NO = F.PLCY_NO) AS îñÒ´ÓøNBÜÍßÁ?ßÚèâòðÜ»Ù£,          
        (SELECT ITEM_TEXT FROM CTCO0200TB WHERE PLCY_NO = A.PLCY_NO AND OBJT_ITEM_CD = 'N1433' AND ETSTATUS = 'A' AND APPL_END_DATE = '29991231') AS ÐÑÒ´Óø_ª½ªÎöâòðÜ» 
FROM CODE0000TB A, CODS0000TB B 
WHERE A.ENTY_DSGN_NO = B.ENTY_DSGN_NO
AND A.ENTY_DSGN_NO LIKE 'C%' OR A.ENTY_DSGN_NO LIKE 'B%'
START WITH A.ENTY_DSGN_NO = 'C18030000002'
CONNECT BY PRIOR A.PREV_PLCY_NO = A.PLCY_NO
ORDER BY LEVEL DESC, A.ENTY_DSGN_NO;
  
  