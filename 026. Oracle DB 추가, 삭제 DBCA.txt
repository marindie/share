==================================================
오라클 DB추가 
==================================================
1. /oracle/11g/bin/dbca 를 사용하여 DB,SID를 추가(SID는 8자 이내로 설정)
lsnrctl services 로 서비스 확인 추천
dbca instance 추가 명령어 (최소한의 정보만 입력. 나머진 Default 의존)
dbca -silent -createDatabase -templateName General_Purpose.dbc -gdbname GWIDEDEV -sid GWIDEDEV -sysDBAUserName sys -sysDBAPassword password -responseFile NO_VALUE -characterSet KO16MSWIN949 -memoryPercentage 20 -emConfiguration NONE

2. 추가한 DB에 sysdba 로 접속하여 사용자 생성
sqlplus / as sysdba 를 하면 환경변수 ORACLE_SID 에 설정된 SID(DB)로 접속되므로 
export ORACLE_SID=추가된SID 를 실행하고 sqlplus / as sysdba를 사용하여 접속한다.

3. 테이블스 페이스 추가
CREATE TABLESPACE DATA01 DATAFILE '/ORACLE/oradata/GWIDEDEV/data01.dbf' SIZE 64M AUTOEXTEND ON SEGMENT SPACE MANAGEMENT AUTO;
CREATE TABLESPACE DATA02 DATAFILE '/ORACLE/oradata/GWIDEDEV/data02.dbf' SIZE 64M AUTOEXTEND ON SEGMENT SPACE MANAGEMENT AUTO;
CREATE TABLESPACE DATA03 DATAFILE '/ORACLE/oradata/GWIDEDEV/data03.dbf' SIZE 64M AUTOEXTEND ON SEGMENT SPACE MANAGEMENT AUTO;
CREATE TABLESPACE DATA04 DATAFILE '/ORACLE/oradata/GWIDEDEV/data04.dbf' SIZE 64M AUTOEXTEND ON SEGMENT SPACE MANAGEMENT AUTO;

CREATE TABLESPACE INDEX01 DATAFILE '/ORACLE/oradata/GWIDEDEV/index01.dbf' SIZE 64M AUTOEXTEND ON SEGMENT SPACE MANAGEMENT AUTO;
CREATE TABLESPACE INDEX02 DATAFILE '/ORACLE/oradata/GWIDEDEV/index02.dbf' SIZE 64M AUTOEXTEND ON SEGMENT SPACE MANAGEMENT AUTO;
CREATE TABLESPACE INDEX03 DATAFILE '/ORACLE/oradata/GWIDEDEV/index03.dbf' SIZE 64M AUTOEXTEND ON SEGMENT SPACE MANAGEMENT AUTO;
CREATE TABLESPACE INDEX04 DATAFILE '/ORACLE/oradata/GWIDEDEV/index04.dbf' SIZE 64M AUTOEXTEND ON SEGMENT SPACE MANAGEMENT AUTO;

CREATE TABLESPACE TS_MWADM DATAFILE '/ORACLE/oradata/GWIDEDEV/ts_mwadm.dbf' SIZE 64M AUTOEXTEND ON SEGMENT SPACE MANAGEMENT AUTO;
CREATE TABLESPACE BIG_IDX DATAFILE '/ORACLE/oradata/GWIDEDEV/big_idx.dbf' SIZE 64M AUTOEXTEND ON SEGMENT SPACE MANAGEMENT AUTO;
CREATE TABLESPACE BIG_DATA DATAFILE '/ORACLE/oradata/GWIDEDEV/big_data.dbf' SIZE 64M AUTOEXTEND ON SEGMENT SPACE MANAGEMENT AUTO;

4. 사용자 추가
-- user 생성
CREATE USER GAEBAL_UPADM IDENTIFIED BY gaebal_upadm DEFAULT TABLESPACE DATA01 ;
CREATE USER GAEBAL_UPADM_DEV IDENTIFIED BY gaebal_upadm_dev DEFAULT TABLESPACE DATA01 ;

5. 권한설정
GRANT CONNECT, RESOURCE, DBA to GAEBAL_UPADM;
GRANT CONNECT, RESOURCE, DBA to GAEBAL_UPADM_DEV;

6. tnsnames.ora 는 재기동 필요 없음. listener.ora 는  lsnrctl reload 로 재기동 없이 다시 불러 올 수 있음.

7. DB 생성 확인
export ORACLE_SID=GWIDEDEV
sqlplus / as sysdba
SELECT INSTANCE_NAME, STATUS, DATABASE_STATUS FROM V$INSTANCE;
SELECT * FROM GLOBAL_NAME;
SELECT NAME FROM V$DATAFILE;

9. 리스너 설정(listener.ora, tnsnames.ora) 사실 DB 생성하면 tnsnames.ora 자동으로 만들어줌. 기존 같은 포트에 접속하는 것이라면 listener.ora 변경안됨.
아마 된다고 해도 알아서 처리 하는듯. 걍 접속하면 됨.
----------- listener.ora -----------------
LISTENER =
  (ADDRESS_LIST =
        (ADDRESS =
                (PROTOCOL = TCP)
                (HOST = 아이피)
                (PORT = 1521)
        )
) 
SID_LIST_LISTENER =
  (SID_LIST =
    (SID_DESC =
      (SID_NAME = 기존SID)
      (ORACLE_HOME = /oracle/11g)
    )
    (SID_DESC =
      (SID_NAME = 추가SID)
      (ORACLE_HOME = /oracle/11g)
    )
  )
----------- tnsnames.ora -----------------
기존SID =
  (DESCRIPTION =
    (ADDRESS = 
                (PROTOCOL = TCP)
                (HOST = 아이피)
                (PORT = 1521)
        )
    (CONNECT_DATA =
      (SID =기존SID)
    )
  ) 
추가SID =
  (DESCRIPTION =
    (ADDRESS = 
                (PROTOCOL = TCP)
                (HOST = 아이피)
                (PORT = 1521)
        )
    (CONNECT_DATA =
      (SID = 추가SID)
    )
  )

==================================================
오라클 DB삭제
==================================================
1. DB 삭제 dbca -silent -deleteDatabase -sourceDB GWIDEDEV -sysDBAUserName sys -sysDBAPassword password




============================
DBCA 참고 자료
============================
dbca -silent -createDatabase  -templateName General_Purpose.dbc  -gdbname MY_CDB -sid MY_CDB -responseFile NO_VALUE \
 -characterSet AL32UTF8  -sysPassword MyPassword123  -systemPassword MyPassword123  -createAsContainerDatabase true \
 -numberOfPDBs 1 -pdbName MY_PDB -pdbAdminPassword MyPassword123 -databaseType MULTIPURPOSE \
 -automaticMemoryManagement false -totalMemory 2000 -storageType FS  -datafileDestination "//oradata/" \
 -redoLogFileSize 200 -emConfiguration NONE -ignorePreReqs
 
 
dbca  [-silent | -progressOnly | - ] {<command> <options> }  | { [<command> [options] ] -responseFile  <response file > } [-continueOnNonFatalErrors <true | false>]
자세한 내용은 설명서를 참조하십시오.
다음 명령 중 하나를 입력할 수 있습니다.

다음 매개변수를 지정하여 데이터베이스 생성:
        -createDatabase
                -templateName <기존 템플리트 이름>
                [-cloneTemplate]
                -gdbName <전역 데이터베이스 이름>
                [-policyManaged | -adminManaged <정책 관리 또는 관리자 관리 데이터베이스. 기본값은 관리자 관리 데이터베이스입니다.>]
                        [-createServerPool <생성될 데이터베이스에서 사용할 ServerPool을 생성합니다.>]
                        [-force <사용 가능한 적절한 서버가 없는 경우 강제로 서버 풀을 생성합니다. 이로 인해 이미 실행 중인 데이터베이스에 영향을 줄 수 있습니다.>]
                        -serverPoolName <서버 풀 생성의 경우 하나의 serverPool 이름이고, 서버 풀 사용의 경우 콤마로 구분된 serverPool 이름 목록입니다.>
                        -[cardinality <생성될 새 serverPool에 대한 기수를 지정합니다. 기본값은 정규화 노드 수입니다.>]
                [-sid <데이터베이스 시스템 식별자>]
                [-sysPassword <SYS 사용자 비밀번호>]
                [-systemPassword <SYSTEM 사용자 비밀번호>]
                [-emConfiguration <CENTRAL|LOCAL|ALL|NOBACKUP|NOEMAIL|NONE>
                        -dbsnmpPassword <DBSNMP 사용자 비밀번호>
                        -sysmanPassword <SYSMAN 사용자 비밀번호>
                        [-hostUserName <EM 백업 작업을 위한 호스트 사용자 이름>
                         -hostUserPassword <EM 백업 작업을 위한 호스트 사용자 비밀번호>
                         -backupSchedule <hh:mm 형식의 일 단위 백업 일정>]
                        [-smtpServer <전자 메일 통지에 대한 송신 메일(SMTP) 서버>
                         -emailAddress <전자 메일 통지에 대한 전자 메일 주소>]
                        [-centralAgent <Enterprise Manager 중앙 에이전트 홈>]]
                [-disableSecurityConfiguration <ALL|AUDIT|PASSWORD_PROFILE|NONE>
                [-datafileDestination <모든 데이터베이스 파일에 대한 대상 디렉토리> |  -datafileNames <제어 파일, 테이블스페이스, 리두 로그 파일 및 해당 원시 장치 파일에 대한 spfile과 같은 데이터베이스 객체를 포함하는 텍스트 파일은 이름=값 형식으로 매핑을 지정합니다.>]
                [-redoLogFileSize <각 리두 로그 파일의 크기(메가바이트)>]
                [-recoveryAreaDestination <모든 복구 파일에 대한 대상 디렉토리>]
                [-datafileJarLocation  <복제 데이터베이스 생성에만 사용되는 jar 데이터 파일의 위치>]
                [-storageType < FS | ASM > 
                        [-asmsnmpPassword     <ASM 모니터링을 위한 ASMSNMP 비밀번호>]
                         -diskGroupName   <데이터베이스 영역 디스크 그룹 이름>
                         -recoveryGroupName       <복구 영역 디스크 그룹 이름>
                [-characterSet <데이터베이스의 문자 집합>]
                [-nationalCharacterSet  <데이터베이스의 국가별 문자 집합>]
                [-registerWithDirService <true | false> 
                        -dirServiceUserName    <디렉토리 서비스에 대한 사용자 이름>
                        -dirServicePassword    <디렉토리 서비스에 대한 비밀번호 >
                        -walletPassword    <데이터베이스 전자 지갑에 대한 비밀번호 >]
                [-listeners  <데이터베이스를 구성할 리스너 목록>]
                [-variablesFile   <템플리트의 변수에 대한 변수 값 쌍의 파일 이름>]]
                [-variables  <콤마로 구분된 name=value 쌍 목록>]
                [-initParams <콤마로 구분된 name=value 쌍 목록>]
                [-memoryPercentage <Oracle을 위한 물리적 메모리 백분율>]
                [-automaticMemoryManagement ]
                [-totalMemory <Oracle에 대해 할당된 메모리(MB)>]
                [-databaseType <MULTIPURPOSE|DATA_WAREHOUSING|OLTP>]]

다음 매개변수를 지정하여 데이터베이스 구성:
        -configureDatabase
                -sourceDB    <소스 데이터베이스 SID>
                [-sysDBAUserName     <SYSDBA 권한이 있는 사용자 이름>
                 -sysDBAPassword     <sysDBAUserName 사용자 이름에 대한 비밀번호>]
                [-registerWithDirService|-unregisterWithDirService|-regenerateDBPassword <true | false> 
                        -dirServiceUserName    <디렉토리 서비스에 대한 사용자 이름>
                        -dirServicePassword    <디렉토리 서비스에 대한 비밀번호 >
                        -walletPassword    <데이터베이스 전자 지갑에 대한 비밀번호 >]
                [-disableSecurityConfiguration <ALL|AUDIT|PASSWORD_PROFILE|NONE>
                [-enableSecurityConfiguration <true|false>
                [-emConfiguration <CENTRAL|LOCAL|ALL|NOBACKUP|NOEMAIL|NONE>
                        -dbsnmpPassword <DBSNMP 사용자 비밀번호>
                        -symanPassword <SYSMAN 사용자 비밀번호>
                        [-hostUserName <EM 백업 작업을 위한 호스트 사용자 이름>
                         -hostUserPassword <EM 백업 작업을 위한 호스트 사용자 비밀번호>
                         -backupSchedule <hh:mm 형식의 일 단위 백업 일정>]
                        [-smtpServer <전자 메일 통지에 대한 송신 메일(SMTP) 서버>
                         -emailAddress <전자 메일 통지에 대한 전자 메일 주소>]
                        [-centralAgent <Enterprise Manager 중앙 에이전트 홈>]]


다음 매개변수를 지정하여 기존 데이터베이스에서 템플리트 생성:
        -createTemplateFromDB
                -sourceDB    <<호스트>:<포트>:<SID> 형식의 서비스>
                -templateName      <새 템플리트 이름>
                -sysDBAUserName     <SYSDBA 권한이 있는 사용자 이름>
                -sysDBAPassword     <sysDBAUserName 사용자 이름에 대한 비밀번호>
                [-maintainFileLocations <true | false>]


다음 매개변수를 지정하여 기존 데이터베이스에서 복제 템플리트 생성:
        -createCloneTemplate
                -sourceSID    <소스 데이터베이스 SID>
                -templateName      <새 템플리트 이름>
                [-sysDBAUserName     <SYSDBA 권한이 있는 사용자 이름>
                 -sysDBAPassword     <sysDBAUserName 사용자 이름에 대한 비밀번호>]
                [-maintainFileLocations <true | false>]
                [-datafileJarLocation       <압축 형식으로 데이터 파일을 저장할 디렉토리>]

다음 매개변수를 지정하여 데이터베이스 생성을 위한 스크립트 생성:
        -generateScripts
                -templateName <기존 템플리트 이름>
                -gdbName <전역 데이터베이스 이름>
                [-scriptDest       <모든 스크립트 파일에 대한 대상>]

다음 매개변수를 지정하여 데이터베이스 삭제:
        -deleteDatabase
                -sourceDB    <소스 데이터베이스 SID>
                [-sysDBAUserName     <SYSDBA 권한이 있는 사용자 이름>
                 -sysDBAPassword     <sysDBAUserName 사용자 이름에 대한 비밀번호>]
다음 옵션을 지정하여 도움말 질의: -h | -help

https://docs.oracle.com/database/121/ADMQS/GUID-418CDFD6-340C-40B4-AC08-5005560ED9DC.htm

기본 정보에서 아래 정보만을 바꾸면 DB 생성이 가능하다고 한다. 

.dbc 란?
템플릿 이라고 불리며 DB 생성 구조와 이미 존재하는 물리 데이터 파일 정보를 포함
Name of the database
Destination of the data files
Number of control files
Number of online redo log groups
Initialization parameters

.dbt 란?
이 템플릿은 신규 데이터 베이스 추가에 사용된다.
데이터베이스 특성에 대한 정보를 담고 있으며 더 유연하게 redo log files 이나 이름, 사이즈 및 다른 속성을 원하는대로 변경이 가능하다.


https://docs.oracle.com/cd/E17559_01/em.111/e16599/appdx_creating_db_templates.htm

Creating .dbt Template File from Existing Databases

template dbt dbca -silent -createTemplateFromDB -sourceDB GLOB -sysDBAUserName sys -sysDBAPassword change_on_install -templateName glob_template

Creating .dbc Template File from Existing Databases

template dbc dbca -silent -createCloneTemplate -sourceDB GLOB -sysDBAUserName sys -sysDBAPassword change_on_install -templateName glob_clone

Total System Global Area 3340451840 bytes
Fixed Size                  2217952 bytes
Variable Size            2583693344 bytes
Database Buffers          738197504 bytes
Redo Buffers               16343040 bytes

기존 DB를 dbt로 추출해서 보니 아래와 같은 변수명을 사용하고 있었다.
${ORACLE_BASE}/oradata/{DB_UNIQUE_NAME}
DB_UNIQUE_NAME 은 parameter 로 WIDEDEV로 적혀있음.

